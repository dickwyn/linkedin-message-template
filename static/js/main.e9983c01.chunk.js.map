{"version":3,"sources":["Components/Template/Template.js","Components/Header/Header.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Template","state","template","name","company","job","signature","handleChange","e","_this","setState","Object","defineProperty","target","value","Clipboard","_this$state","this","react_default","a","createElement","className","concat","type","placeholder","onChange","data-clipboard-target","Component","Header","href","Footer","year","Date","getFullYear","App","Components_Header_Header","Components_Template_Template","Components_Footer_Footer","Boolean","window","location","hostname","match","ReactGA","initialize","ga","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9983c01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Clipboard from 'clipboard';\nimport '../../styles/template.scss';\n\nclass Template extends Component {\n  state = {\n    template: 'Default',\n    name: 'dickwyn',\n    company: 'testorange',\n    job: 'full stack developer roles',\n    signature: true,\n  };\n\n  componentDidMount() {\n    new Clipboard('.btn');\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { template, name, company, job } = this.state;\n\n    return (\n      <div className=\"template\">\n        <div className=\"title\">\n          <h1>{template} template</h1>\n        </div>\n        <div className=\"message\">\n          {`Hi ${name},\\n\\nI came across your profile through the alumni search. I will be graduating ASU this December with a CS degree. I'm looking to apply for ${job} within ${company}. I would like to have a chat with you to get some pointers when applying for a role at ${company}.\\n\\nGo Devils!`}\n        </div>\n        <div className=\"form\">\n          <div className=\"label\">Template</div>\n          <div className=\"template-select\">\n            <select className=\"form-control\">\n              <option>Default Template</option>\n            </select>\n          </div>\n          <div className=\"label\">Name</div>\n          <div className=\"name\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"John\"\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"label\">Company</div>\n          <div className=\"company\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Google\"\n              name=\"company\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"label\">Job</div>\n          <div className=\"job\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Full Stack developer roles\"\n              name=\"job\"\n              onChange={this.handleChange}\n            />\n          </div>\n          {/* <div className=\"label\">Signature</div>\n          <div className=\"signature\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"signatureName\"\n              checked\n            />\n          </div> */}\n          <div className=\"copy-button\">\n            <button\n              type=\"button\"\n              className=\"btn\"\n              data-clipboard-target=\".message\"\n            >\n              Copy Text\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Template;\n","import React, { Component } from 'react';\nimport '../../styles/header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"left\">\n          <a href=\"https://www.dickwyn.xyz/\">dickwyn.xyz</a>\n        </div>\n        <div className=\"right\">\n          <a href=\"https://blog.dickwyn.xyz/\">Blog</a>\n          <a href=\"https://www.dropbox.com/s/l4e85oz3jflg9fl/resume-dick-wyn-yong.pdf?dl=0\">\n            Resume\n          </a>\n          <a href=\"mailto:dickwyn@outlook.com\">Contact</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../../styles/footer.scss';\n\nclass Footer extends Component {\n  render() {\n    const year = new Date().getFullYear();\n\n    return (\n      <div className=\"footer\">\n        <div className=\"text\">Â© {year} testorange - message template v0.2</div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './styles/App.scss';\nimport Template from './Components/Template/Template';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Template />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactGA.initialize('UA-64177134-1');\n\nReactGA.ga('send', 'pageview', '/');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}